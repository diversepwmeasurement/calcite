concurrency:
  cancel-in-progress: true
  group: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
    ) && format('ci-main-{0}', github.sha) || format('ci-main-{0}', github.ref) }}
env:
  _JAVA_OPTIONS: -XX:GCTimeLimit=90 -XX:GCHeapFreeLimit=35
jobs:
  errorprone-guava-latest:
    env:
      GUAVA: 32.1.3-jre
    if: github.event.action != 'labeled'
    name: Error Prone (JDK 11), latest Guava
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -Pguava.version=${{ env.GUAVA
          }} -PenableErrorprone classes
        job-id: errprone
        remote-build-cache-proxy-enabled: false
  linux-avatica:
    if: github.event.action != 'labeled'
    name: Linux (JDK 11), Avatica main
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      name: Clone Avatica to Maven Local repository
      run: 'git clone --branch main --depth 100 https://github.com/apache/calcite-avatica.git
        ../calcite-avatica

        '
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Build Avatica
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: publishToMavenLocal
        build-root-directory: ../calcite-avatica
        job-id: avatica-jdk${{ matrix.jdk }}
        properties: 'calcite.avatica.version=1.0.0-dev-main

          skipJavadoc=

          '
        remote-build-cache-proxy-enabled: false
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon build javadoc
        execution-only-caches: true
        job-id: jdk${{ matrix.jdk }}
        properties: 'calcite.avatica.version=1.0.0-dev-main-SNAPSHOT

          enableMavenLocal=

          '
        remote-build-cache-proxy-enabled: false
  linux-checkerframework:
    name: CheckerFramework (JDK 11)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Run CheckerFramework
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -PenableCheckerframework :linq4j:classes
          :core:classes
        job-id: checkerframework-jdk11
        remote-build-cache-proxy-enabled: false
  linux-checkerframework-guava29:
    env:
      GUAVA: '21.0'
    name: CheckerFramework (JDK 11), oldest Guava
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Run CheckerFramework
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -Pguava.version=${{ env.GUAVA
          }} -PenableCheckerframework :linq4j:classes :core:classes
        job-id: checkerframework-jdk11
        remote-build-cache-proxy-enabled: false
  linux-druid:
    if: github.event.action != 'labeled'
    name: Druid Tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      name: Checkout Druid dataset
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        path: druid-dataset
        repository: zabetak/calcite-druid-dataset
    - continue-on-error: true
      name: Start Druid containers
      run: 'chmod -R 777 storage

        docker compose up -d

        '
      working-directory: ./druid-dataset
    - continue-on-error: true
      name: Wait Druid nodes to startup
      run: 'until docker logs coordinator | grep "Successfully started lifecycle \[module\]";
        do sleep 1s; done

        until docker logs router | grep "Successfully started lifecycle \[module\]";
        do sleep 1s; done

        until docker logs historical | grep "Successfully started lifecycle \[module\]";
        do sleep 1s; done

        until docker logs middlemanager | grep "Successfully started lifecycle \[module\]";
        do sleep 1s; done

        until docker logs broker | grep "Successfully started lifecycle \[module\]";
        do sleep 1s; done

        '
    - continue-on-error: true
      name: Index Foodmart/Wikipedia datasets
      run: ./index.sh 30s
      working-directory: ./druid-dataset
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        path: calcite
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Run Druid tests
      timeout-minutes: 10
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon :druid:test -Dcalcite.test.druid=true
        build-root-directory: ./calcite
        job-id: Druid8
        remote-build-cache-proxy-enabled: false
  linux-jdk11-tz:
    env:
      TZ: Pacific/Chatham
    if: github.event.action != 'labeled'
    name: Linux (JDK 11), Pacific/Chatham Timezone
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon build
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
  linux-jdk17:
    env:
      GUAVA: '21.0'
    if: github.event.action != 'labeled'
    name: Linux (JDK 17)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -Pguava.version=${{ env.GUAVA
          }} build
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
  linux-jdk19:
    env:
      GUAVA: '21.0'
    if: github.event.action != 'labeled'
    name: Linux (JDK 19)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 19
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 19
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -Pguava.version=${{ env.GUAVA
          }} tasks build
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
  linux-jdk8-latest-guava-tz:
    env:
      GUAVA: 32.1.3-jre
      TZ: America/New_York
    if: github.event.action != 'labeled'
    name: Linux (JDK 8), latest Guava, America/New_York Timezone
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      env:
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -Pguava.version=${{ env.GUAVA
          }} tasks build
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
  linux-jdk8-oldest-guava-tz:
    env:
      GUAVA: '21.0'
      TZ: America/New_York
    if: github.event.action != 'labeled'
    name: Linux (JDK 8), oldest Guava, America/New_York Timezone
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -Pguava.version=${{ env.GUAVA
          }} build
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
  linux-slow:
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name,
      'slow-tests-needed')
    name: Linux (JDK 8) Slow Tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon testSlow
        job-id: jdk8
        remote-build-cache-proxy-enabled: false
  mac:
    if: github.event.action != 'labeled'
    name: macOS (JDK 19)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 19
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 19
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon build javadoc
        job-id: jdk19
        remote-build-cache-proxy-enabled: false
    - continue-on-error: true
      name: sqlline and sqllsh
      run: './sqlline -e ''!quit''

        echo

        echo Sqlline example/csv

        ./example/csv/sqlline --verbose -u jdbc:calcite:model=example/csv/src/test/resources/model.json
        -n admin -p admin -f example/csv/src/test/resources/smoke_test.sql

        echo

        echo sqlsh

        ./sqlsh -o headers "select count(*) commits, author from (select substring(author,
        1, position('' <'' in author)-1) author from git_commits) group by author
        order by count(*) desc, author limit 20"

        '
  windows-jdk17:
    if: github.event.action != 'labeled'
    name: Windows (JDK 17)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon build
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
    - continue-on-error: true
      name: sqlline and sqllsh
      run: 'call sqlline.bat -e ''!quit''

        echo.

        echo Sqlline example/csv

        call example/csv/sqlline.bat --verbose -u jdbc:calcite:model=example/csv/src/test/resources/model.json
        -n admin -p admin -f example/csv/src/test/resources/smoke_test.sql

        echo.

        echo sqlsh

        call sqlsh.bat -o headers "select count(*) commits, author from (select substring(author,
        1, position('' <'' in author)-1) author from git_commits) group by author
        order by count(*) desc, author limit 20"

        '
      shell: cmd
  windows-jdk8:
    if: github.event.action != 'labeled'
    name: Windows (JDK 8)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        S3_BUILD_CACHE_ACCESS_KEY_ID: ${{ secrets.S3_BUILD_CACHE_ACCESS_KEY_ID }}
        S3_BUILD_CACHE_SECRET_KEY: ${{ secrets.S3_BUILD_CACHE_SECRET_KEY }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon build javadoc
        job-id: jdk${{ matrix.jdk }}
        remote-build-cache-proxy-enabled: false
    - continue-on-error: true
      name: sqlline and sqllsh
      run: 'call sqlline.bat -e ''!quit''

        echo.

        echo Sqlline example/csv

        call example/csv/sqlline.bat --verbose -u jdbc:calcite:model=example/csv/src/test/resources/model.json
        -n admin -p admin -f example/csv/src/test/resources/smoke_test.sql

        echo.

        echo sqlsh

        call sqlsh.bat -o headers "select count(*) commits, author from (select substring(author,
        1, position('' <'' in author)-1) author from git_commits) group by author
        order by count(*) desc, author limit 20"

        '
      shell: cmd
name: CI
on:
  repository_dispatch:
    types: trigger-ga___main.yml
